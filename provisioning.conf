# /etc/dnsmasq.d/provisioning.conf

# === General Configuration ===
# Listen on this specific interface and the loopback address
interface=ens34
listen-address=::1,127.0.0.1,10.10.1.1
# Bind to the interface to prevent listening on all interfaces
bind-interfaces

# Don't read /etc/resolv.conf for upstream servers
no-resolv

# Set domain for DHCP clients
domain=yourdomain.com

# === DNS Configuration ===
# Set upstream DNS servers for recursive lookups
server=1.1.1.1
server=1.0.0.1
# Don't forward plain names (without a dot or a domain part)
domain-needed
# Don't forward non-routed address spaces
bogus-priv
# Define the local, authoritative domain
local=/yourdomain.com/
# Add static host records for the Kubernetes cluster nodes.
# This makes dnsmasq authoritative for these names.

address=/gateway.yourdomain.com/10.10.1.1
address=/node1.yourdomain.com/10.10.1.21
address=/node2.yourdomain.com/10.10.1.22
address=/node3.yourdomain.com/10.10.1.23
address=/node4.yourdomain.com/10.10.1.24

dhcp-host=aa:11:22:33:44:51,10.10.1.21,node1
dhcp-host=aa:11:22:33:44:52,10.10.1.22,node2
dhcp-host=aa:11:22:33:44:53,10.10.1.23,node3
dhcp-host=aa:11:22:33:44:54,10.10.1.24,node4

# === DHCP Configuration ===
# Define the DHCP range, lease time
dhcp-range=10.10.1.100,10.10.1.200,255.255.255.0,12h
# Provide gateway and DNS server options to clients.
# Point clients to this server for DNS.
dhcp-option=option:router,10.10.1.1
dhcp-option=option:dns-server,10.10.1.1
# Make this DHCP server authoritative for the subnet
dhcp-authoritative
# Enable verbose DHCP logging for troubleshooting
log-dhcp

# Enable TFTP server
enable-tftp
tftp-root = /srv/tftp # Make sure this path is correct for your setup

# === PXE/iPXE Chainloading Logic ===
# Tag requests coming from iPXE firmware (DHCP option 175)
dhcp-match=set:ipxe,175

# Tag requests coming from iPXE itself. iPXE identifies itself with user-class="iPXE".
dhcp-userclass=set:ipxe,iPXE

# Tag requests from UEFI clients (DHCP option 93)
# Arch 7 = EFI x86-64
# Arch 9 = EFI x86-64
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9

# Stage 1: Client is a UEFI machine. Serve the iPXE EFI binary.
dhcp-boot=tag:!ipxe,tag:efi-x86_64,ipxe.efi
# Matches if 'ipxe' is NOT set but 'efi-x86_64' IS set.
dhcp-boot=http://10.10.1.1/index.php?mac=${net0/mac}

